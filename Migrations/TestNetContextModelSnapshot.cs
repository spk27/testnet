// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestNet.Conexto;

namespace TestNet.Migrations
{
    [DbContext(typeof(TestNetContext))]
    partial class TestNetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestNet.Entidades.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContactoID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("TestNet.Entidades.Empleo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmpleoID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("NumeroTrabajadores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empleos");
                });

            modelBuilder.Entity("TestNet.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("EmpleoId")
                        .HasColumnName("EmpleoID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("EmpleoId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("TestNet.Entidades.PersonaContacto", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnName("PersonaID")
                        .HasColumnType("int");

                    b.Property<int>("ContactoId")
                        .HasColumnName("ContactoID")
                        .HasColumnType("int");

                    b.HasKey("PersonaId", "ContactoId");

                    b.HasIndex("ContactoId");

                    b.ToTable("PersonaContacto");
                });

            modelBuilder.Entity("TestNet.Entidades.Persona", b =>
                {
                    b.HasOne("TestNet.Entidades.Empleo", "Empleo")
                        .WithMany("Personas")
                        .HasForeignKey("EmpleoId")
                        .HasConstraintName("FK_Personas_Empleo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestNet.Entidades.PersonaContacto", b =>
                {
                    b.HasOne("TestNet.Entidades.Contacto", "Contacto")
                        .WithMany("PersonaContactos")
                        .HasForeignKey("ContactoId")
                        .HasConstraintName("FK_Contacto_Personas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestNet.Entidades.Persona", "Persona")
                        .WithMany("PersonaContactos")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_Persona_Contactos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
